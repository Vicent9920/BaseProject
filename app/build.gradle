apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.vincent.baseproject"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        multiDexEnabled true
    }

        signingConfigs {
        release {
            keyAlias 'base'
            keyPassword 'base2019'
            storeFile file('../base.jks')
            storePassword 'base2019'
        }

//        debug {
//            keyAlias '密钥别称'
//            keyPassword '密钥密码'
//            storeFile file('E:/MySign.jks')
//            storePassword '密钥库密码'
//        }
    }
    buildTypes {
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            // 移除无用的resource文件，前提minifyEnabled必须打开
            shrinkResources true
            // ZipAlign优化
            zipAlignEnabled true
            // 设置混淆
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 开发环境签名
            signingConfig signingConfigs.release
        }

        debug {
            //ZipAlign优化
            zipAlignEnabled false
            //设置混淆
            minifyEnabled false
            //加载默认混淆配置涵
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 开发环境签名
            //signingConfig signingConfigs.release
        }
    }

    compileOptions {
        //使用JAVA8语法解析
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$rootProject.ext.appcompat"
    implementation "androidx.core:core:$rootProject.ext.core"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.ext.constraintlayout"
    implementation "androidx.legacy:legacy-support-v4:$rootProject.ext.supportV4"
    testImplementation "junit:junit:$rootProject.ext.junit"
    androidTestImplementation "androidx.test:runner:$rootProject.ext.runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.ext.espressoCore"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.gson"
    // 沉浸式状态栏颜色
    implementation "com.jaeger.statusbarutil:library:$rootProject.ext.statusbarutil"
    // 界面侧滑
    implementation "cn.bingoogolapple:bga-swipebacklayout:$rootProject.ext.swipebacklayout"
    // 键对值存储器
    implementation "com.orhanobut:hawk:$rootProject.ext.hawk"
    // For Kotlin use navigation-fragment-ktx
    implementation "android.arch.navigation:navigation-fragment:$rootProject.ext.nav_version"
    // For Kotlin use navigation-ui-ktx
    implementation "android.arch.navigation:navigation-ui:$rootProject.ext.nav_version"

//    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // 底部多级联动选择对话框
    implementation("com.github.gzu-liyujiang.AndroidPicker:WheelPicker:$rootProject.ext.WheelPicker") {
        exclude group: 'com.android.support'
    }
    implementation "com.zaaach:citypicker:$rootProject.ext.citypicker"

    implementation "com.github.pinguo-zhouwei:MZBannerView:$rootProject.ext.mzBanner"
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.ext.glide"
//    implementation "androidx.multidex:multidex:2.0.0"
    //    implementation project(':baselibrary')
    compile project(path: ':dialoglibrary')
    implementation project(':baselibrary')
}
